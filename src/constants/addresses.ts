import { Networks } from "./blockchain";

const AVAX_MAINNET = {
    DAO_ADDRESS: "0x5c4e844B811D248e492Cf4EAdBaB99C88c808391",
    DP_ADDRESS: "0x9C0495e66F1b145b6F04137e98AB68E0bfAd7900",
    Dirac_ADDRESS: "0x78a6efd3e512742de10c4974239c1d86f24ee42a",
    MIM_ADDRESS: "0x130966628846BFd36ff31a822705796e8cb8C18D",
    STAKING_ADDRESS: "0x1a627d8B9cb63132e76624be35cAE548a5f76277",
    STAKING_HELPER_ADDRESS: "0x096BBfB78311227b805c968b070a81D358c13379",
    Dirac_BONDING_CALC_ADDRESS: "0x0Bb3F1d6d1622ABABc52E07f3902436184017773",
    TREASURY_ADDRESS: "0x8BcE6E63267afB1490be4C309632144cbC2137AD",
    ZAPIN_ADDRESS: "0x9ABE63C5A2fBcd54c8bAec3553d326356a530cae", //"0xb98007C04f475022bE681a890512518052CE6104",
    WMEMO_ADDRESS: "0x0da67235dD5787D67955420C84ca1cEcd4E5Bb3b",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.AVAX) return AVAX_MAINNET;

    throw Error("Network don't support");
};
